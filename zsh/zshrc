# --------------------------------------------------------------
# Z4H CORE CONFIGURATION
# --------------------------------------------------------------
zstyle ':z4h:' auto-update      'ask'
zstyle ':z4h:' auto-update-days '7'
zstyle ':omz:update' mode auto
zstyle ':omz:update' frequency 7
zstyle ':z4h:bindkey' keyboard  'mac'
zstyle ':z4h:' start-tmux       no
zstyle ':z4h:' term-shell-integration 'yes'
zstyle ':z4h:autosuggestions' forward-char 'accept'
zstyle ':z4h:fzf-complete' recurse-dirs 'no'
zstyle ':z4h:direnv' enable 'no'
zstyle ':z4h:direnv:success' notify 'yes'

# run `z4h update` to update everything

# --------------------------------------------------------------
# SSH TELEPORTATION SETTINGS
# --------------------------------------------------------------
zstyle ':z4h:ssh:abdullah@omarchy'   enable 'no'
zstyle ':z4h:ssh:root@130.0.0.104'   enable 'no'
zstyle ':z4h:ssh:*'                  enable 'yes'  # default for others

# Send additional files when teleporting
# zstyle ':z4h:ssh:*' send-extra-files '<file path>'

# --------------------------------------------------------------
# GIT REPOSITORIES TO INSTALL
# --------------------------------------------------------------
z4h install ohmyzsh/ohmyzsh || return

# --------------------------------------------------------------
# INITIALIZE Z4H (core plugins, completions, fzf, prompt, etc.)
# --------------------------------------------------------------
z4h init || return

# --------------------------------------------------------------
# PATH EXTENSIONS
# --------------------------------------------------------------
path=(~/bin $path)

# --------------------------------------------------------------
# ENVIRONMENT VARIABLES
# --------------------------------------------------------------
export XDG_CONFIG_HOME="$HOME/.config"   # XDG base directory
export TERM=xterm-256color               # Ghostty terminal compatibility
export LOCAL_NOTEBOOK_DEV=1              # Zed Preview flag
export EDITOR='micro'                    # Default terminal editor (yazi)
export MICRO_TRUECOLOR=1                 # Micro editor theming
export GPG_TTY=$TTY                      # For GPG TTY binding


# --------------------------------------------------------------
# LOCAL ENVIRONMENT OVERRIDES
# --------------------------------------------------------------
# z4h source ~/.env.zsh

# --------------------------------------------------------------
# ADDITIONAL GIT REPOS PULLED IN WITH `z4h install`
# --------------------------------------------------------------
# z4h source ohmyzsh/ohmyzsh/lib/diagnostics.zsh  # source an individual file
# z4h load   ohmyzsh/ohmyzsh/plugins/emoji-clock  # load a plugin

# --------------------------------------------------------------
# KEYBINDINGS
# --------------------------------------------------------------
z4h bindkey undo Ctrl+/   Shift+Tab     # undo the last command line change
z4h bindkey redo Option+/               # redo the last undone command line change
z4h bindkey z4h-cd-back    Shift+Left   # cd into the previous directory
z4h bindkey z4h-cd-forward Shift+Right  # cd into the next directory
z4h bindkey z4h-cd-up      Shift+Up     # cd into the parent directory
z4h bindkey z4h-cd-down    Shift+Down   # cd into a child directory

# --------------------------------------------------------------
# AUTOLOAD FUNCTIONS
# --------------------------------------------------------------
autoload -Uz zmv

# --------------------------------------------------------------
# DEFINE FUNCTIONS AND COMPLETIONS
# --------------------------------------------------------------

# --- Custom Functions ---

# Make + cd into directory
function md() { [[ $# == 1 ]] && mkdir -p -- "$1" && cd -- "$1" }
compdef _directories md

# Yazi shell wrapper (cd into last directory)
function y() {
  local tmp="$(mktemp -t "yazi-cwd.XXXXXX")" cwd
  yazi "$@" --cwd-file="$tmp"
  IFS= read -r -d '' cwd < "$tmp"
  [ -n "$cwd" ] && [ "$cwd" != "$PWD" ] && builtin cd -- "$cwd"
  rm -f -- "$tmp"
}

# Zoxide + fallback cd
function zd() {
  if [ $# -eq 0 ]; then
    builtin cd ~ && return
  elif [ -d "$1" ]; then
    builtin cd "$1"
  else
    z "$@" && printf "\U000F17A9 " && pwd || echo "Error: Directory not found"
  fi
}

# macOS-style "open" command for Linux
# Define "open" only on non-macOS systems
if [[ "$OSTYPE" != "darwin"* ]]; then
  function open() {
    xdg-open "$@" >/dev/null 2>&1 &
  }
fi

# --- Completions ---

# Add custom completion directories
fpath+=("$HOME/.zfunc")
fpath+=("$HOME/.docker/completions")

# macOS-only Homebrew completions
if [[ "$OSTYPE" == "darwin"* && -x "$(command -v brew)" && -z "$Z4H_SSH" ]]; then
  eval "$(brew shellenv)"
fi

# Initialize Zshâ€™s completion system
autoload -Uz compinit && compinit

# Initialize tool-specific completions
eval "$(zoxide init zsh)"                      # zoxide
eval "$(uv generate-shell-completion zsh)"     # uv
eval "$(uvx --generate-shell-completion zsh)"  # uvx

# eval "$(starship init zsh)" # Starship
# eval "$(oh-my-posh init zsh)" # Oh My Posh
# source <(fzf --zsh) # fzf

# --------------------------------------------------------------
# DEFINE NAMED DIRECTORIES
# --------------------------------------------------------------

# --------------------------------------------------------------
# ALIASES
# --------------------------------------------------------------
alias zed-preview="/opt/homebrew/bin/zed-preview"                # Zed Preview
alias ls='eza -lh --group-directories-first --icons=auto'        # eza 
alias lsa='ls -a'
alias lt='eza --tree --level=2 --long --icons --git'
alias lta='lt -a'
alias ff="fzf --preview 'bat --style=numbers --color=always {}'" # fzf
alias cd="zd"                                                    # use zoxide wrapper
alias man=batman                                                 # `man` page colorizer using `bat`
alias tree='tree -a -I .git'

# Add flags to existing aliases
alias ls="${aliases[ls]:-ls} -A"                                 # z4h default enhancement

# --------------------------------------------------------------
# SHELL OPTIONS
# --------------------------------------------------------------
setopt SHARE_HISTORY          # share history across sessions
setopt APPEND_HISTORY         # append rather than overwrite
setopt HIST_REDUCE_BLANKS     # clean up extra spaces
setopt HIST_IGNORE_SPACE      # ignore commands starting with space
setopt HIST_EXPIRE_DUPS_FIRST # expire duplicates first
setopt glob_dots              # show dotfiles in globs
setopt no_auto_menu           # require second TAB to open menu
